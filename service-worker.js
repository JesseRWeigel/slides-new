"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/index.html","789a8cf3d5c1632f6d99393742135159"],["/static/css/main.c6b51f73.css","0e9ce8347603ae681f8199d9317f2575"],["/static/media/css-modules-logo-cropped.69501a12.png","69501a125e37f2e3af574b7226528211"],["/static/media/css-styled-form.9bc4e25a.png","9bc4e25ad72b227bd1cd0e72f49cb092"],["/static/media/ds_cover-slide.22f9fdb0.png","22f9fdb0b37c1c55de4b7af5e52c4609"],["/static/media/ds_gs_intro.490b973f.png","490b973f30c4654cede4579fe7de3738"],["/static/media/ds_sponsors.83cb6b06.png","83cb6b06a24fca5b23087a8ed9c6939e"],["/static/media/full-coverage.23615cb5.png","23615cb51093266c09bb2a0a9a898576"],["/static/media/glamorous.734e88e3.png","734e88e3e11735ecab969cdc5610a8f5"],["/static/media/jest-logo.c7c07500.png","c7c075005dd037374cd6d667297e77dd"],["/static/media/life-unit-tests.492dcdbd.png","492dcdbdd4032067fad66d9aaf1cc348"],["/static/media/mcc_sponsors.af870a55.webp","af870a55cb10f7982429ccda03978ebe"],["/static/media/plug.d40e348c.png","d40e348c900ac12676985c7240da7613"],["/static/media/scs-intro-cover.6f78b3cf.png","6f78b3cf49346d018077d781f73bb303"],["/static/media/separation_of_concerns.5334868d.jpg","5334868dba8a6e31165b3b18d4348436"],["/static/media/time.5f42e5a6.jpeg","5f42e5a6ed40f5bf90bdbe707f39bdc4"],["/static/media/top-coverage.75736989.png","75736989ba13a7748d67516e67c7cc1e"],["/static/media/twitter-logo.923455be.svg","923455be1f667836547cad3dc57148eb"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var n=new URL(e);return"/"===n.pathname.slice(-1)&&(n.pathname+=t),n.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,n,a){var r=new URL(e);return a&&r.pathname.match(a)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(n)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var n=new URL(t).pathname;return e.some(function(e){return n.match(e)})},stripIgnoredUrlParameters=function(e,t){var n=new URL(e);return n.hash="",n.search=n.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),n.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],n=e[1],a=new URL(t,self.location),r=createCacheKey(a,hashParamName,n,/\.\w{8}\./);return[a.toString(),r]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(n){if(!t.has(n)){var a=new Request(n,{credentials:"same-origin"});return fetch(a).then(function(t){if(!t.ok)throw new Error("Request for "+n+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(n,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(n){return Promise.all(n.map(function(n){if(!t.has(n.url))return e.delete(n)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,n=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(n))||(n=addDirectoryIndex(n,"index.html"),t=urlsToCacheKeys.has(n));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(n=new URL("/index.html",self.location).toString(),t=urlsToCacheKeys.has(n)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(n)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});